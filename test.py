from primal_simplex import primal_simplex as PL


def test(c, b, A):
    pl = PL(c, b, A)
    success, x, z = pl.solve()
    if success:
        print(
            f"The optimal solution is x = {[round(float(v), 2) for v in x]} with f(x) = {round(z, 2)}"
        )
    else:
        print(x)


c = [-1, 0, 0, 0, 0]
b = [6, 4, 2]
A = [[1, 2, 1, 0, 0], [1, -1, 0, 1, 0], [0, 1, 0, 0, 1]]
test(c, b, A)


c = [2, 1, 0, 0, 0]
b = [5, 4, 20]
A = [[1, 6.5, -1, 0, 0], [2, 1, 0, -1, 0], [5, 4, 0, 0, 1]]
test(c, b, A)


c = [-2, -2, 0, 0, 0, 0]
b = [-24, 21, 6, 3]
A = [
    [8, -3, -1, 0, 0, 0],
    [3, 5, 0, -1, 0, 0],
    [3, -4, 0, 0, -1, 0],
    [1, 0, 0, 0, 0, 1],
]
test(c, b, A)


c = [-1, -3, 0, 0, 0]
b = [0, 4, 15]
A = [
    [1, -2, 1, 0, 0],
    [-2, 1, 0, 1, 0],
    [5, 3, 0, 0, 1],
]
test(c, b, A)


c = [2, 3, 0, 0, 0, 0, 0]
b = [4, 8, 4, 3, 3]
A = [
    [1, 1, 1, 0.0, 0, 0, 0],
    [6, 2, 0, -1, 0, 0, 0],
    [1, 5, 0, 0, -1, 0, 0],
    [1, 0, 0, 0.0, 0, 1, 0],
    [0, 1, 0, 0.0, 0, 0, 1],
]
test(c, b, A)


c = [-3, 4, 0, 0]
b = [4, 18]
A = [[1, 1, 1, 0], [2, 3, 0, -1]]
test(c, b, A)


c = [-1, -3, 0, 0, 0]
b = [12, 4, 6]
A = [
    [-3, 4, 1, 0, 0],
    [1, -1, 0, 1, 0],
    [1, 1, 0, 0, 1],
]
test(c, b, A)


c = [1, -1, 2, 0, 100]
b = [3, 4]
A = [[1, 1, 1, 0, 1], [2, -1, 3, 1, 0]]
test(c, b, A)


c = [-3, -2, -1, 0, 0]
b = [3, 6]
A = [[3, -3, 2, 1, 0], [-1, 2, 1, 0, 1]]
test(c, b, A)


c = [-3, -5, 0, 0, 0, 0]
b = [10, 15, 15, 1]
A = [[1, 1, 1, 0, 0, 0], [1, 2, 0, 1, 0, 0], [2, 1, 0, 0, 1, 0], [1, -2, 0, 0, 0, 1]]
test(c, b, A)


c = [-2, -2, 0, 0]
b = [-1, 2]
A = [[1, -1, -1, 0], [-0.5, 1, 0, 1]]
test(c, b, A)
